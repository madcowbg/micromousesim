package examples

import imgui.ImGui
import imgui.api.slider
import imgui.dsl
import java.io.File
import java.io.IOError
import java.io.IOException
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.util.*
import kotlin.properties.ReadOnlyProperty
import kotlin.properties.ReadWriteProperty
import kotlin.reflect.KProperty

private fun autogeneratedComments() =
    "saved on ${LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm"))}"

class SimpleProps(private val path: String) {
    private val propFile = File(path)
    private val properties: Properties = Properties()

    init {
        try {
            properties.load(propFile.reader())
        } catch (e: IOException) {
            e.printStackTrace()
        }
    }

    fun <T> bind(deserializer: (String) -> T, default: T): ReadWriteProperty<Any?, T> {
        return object : ReadWriteProperty<Any?, T> {
            override fun getValue(thisRef: Any?, property: KProperty<*>): T =
                properties.getProperty(property.name)?.let { deserializer(it) } ?: default

            override fun setValue(thisRef: Any?, property: KProperty<*>, value: T) {
                properties.setProperty(property.name, value.toString())
                properties.store(propFile.writer(), autogeneratedComments())
            }
        }
    }
}

val simpleProps by lazy { SimpleProps("ui.props") }

object Settings {
    var topLeftX: Int by simpleProps.bind({ it.toInt() }, 100)
    var topLeftY: Int by simpleProps.bind({ it.toInt() }, 100)

    var bottomRightX: Int by simpleProps.bind({ it.toInt() }, 200)
    var bottomRightY: Int by simpleProps.bind({ it.toInt() }, 300)
}

object UI {
    var showMouseWindow: Boolean = true
    fun loop() {

        // 2. Show a simple window that we create ourselves. We use a Begin/End pair to create a named window.
        run {
            dsl.window("Settings") {
                dsl.checkbox("Show Mouse", ::showMouseWindow) {}
                if (showMouseWindow) {
                    ImGui.text("Coordinates:")
                    slider("X1", Settings::topLeftX, 0, Settings.bottomRightX)
                    slider("Y1", Settings::topLeftY, 0, Settings.bottomRightY)
                    slider("X2", Settings::bottomRightX, Settings.topLeftX, ImGui.io.displaySize.x)
                    slider("Y2", Settings::bottomRightY, Settings.topLeftY, ImGui.io.displaySize.y)
                }
            }

            dsl.window("Diagnostics") {
                if (showMouseWindow) {
                    ImGui.text("Showing mouse...")
                }

                ImGui.text(
                    "Application average %.3f ms/frame (%.1f FPS)",
                    1_000f / ImGui.io.framerate,
                    ImGui.io.framerate
                )
            }


        }
    }
}